#!/bin/bash
#######################################################
## NETWORK ENVIRONMENT VARIABLES
#######################################################
VM_NAME=${2}

BRIDGE_NAME=br0

PIDFILE=/var/run/${VM_NAME}.pid

PIPE_BASE=/var/run/qemu-${VM_NAME}
PIPE_IN=${PIPE_BASE}.in
PIPE_OUT=${PIPE_BASE}.out

MAIN_DISK=/var/kvm/disks/${VM_NAME}.1.disk

if [ ! -d "/var/kvm/disks" ]
then
    mkdir -pv /var/kvm/disks
fi

if [ ! -f "${MAIN_DISK}" ]
then
    truncate -s42949672960 "${MAIN_DISK}"
fi

TAP_DEV=tap0
#######################################################
## START-VM SCRIPT
#######################################################
start() {
    echo "[VM] Starting virtual machine..."

    mkfifo ${PIPE_IN} ${PIPE_OUT} && \
        qemu-system-x86_64 \
            -daemonize \
            -pidfile ${PIDFILE} \
            -vnc 0.0.0.0:0,password \
            -enable-kvm \
            -machine type=q35,accel=kvm \
            -cpu host \
            -smp 2 \
            -m 3G \
            -object iothread,id=iothread1 \
            -device virtio-scsi-pci,id=scsi0,iothread=iothread1 \
            -drive file=${MAIN_DISK},if=none,format=raw,discard=unmap,aio=native,cache=none,id=scsi0 \
            -device scsi-hd,drive=scsi0,bus=scsi0.0 \
            -device virtio-net-pci,netdev=network0 \
            -netdev tap,id=network0,ifname=${TAP_DEV},script=no,downscript=no,vhost=on \
            -device nec-usb-xhci,id=xhci \
            -device usb-tablet,bus=xhci.0 \
            -vga std \
            -monitor pipe:${PIPE_BASE} && \
        /usr/local/share/connect-vm ${TAP_DEV} ${BRIDGE_NAME}

    echo "[VM] Virtual machine PID == $(cat ${PIDFILE})"
    echo "change vnc password password" > ${PIPE_IN}
}

#######################################################
## STOP SCRIPT
#######################################################
stop() {
    /usr/local/share/disconnect-vm ${TAP_DEV} ${BRIDGE_NAME}

    echo "[VM] Stopping virtual machine..."
    echo "system_powerdown" > ${PIPE_IN}

    echo -n "[VM] waiting for stop"
    while [ -f "${PIDFILE}" ]
    do
        echo -n "."
        sleep 1s
    done

    echo ""
    echo "[VM] stopped."
    rm -v ${PIPE_IN} ${PIPE_OUT}
}

#######################################################
## QUIT SCRIPT
#######################################################
quit() {
    /usr/local/share/disconnect-vm ${TAP_DEV} ${BRIDGE_NAME}

    echo "[VM] Quitting Virtual Machine Emulation..."
    echo "quit" > ${PIPE_IN}

    echo -n "[VM] waiting for stop..."
    while [ -f "${PIDFILE}" ]
    do
        echo -n "."
        sleep 1s
    done

    echo ""
    echo "[VM] stopped."
    rm -v ${PIPE_IN} ${PIPE_OUT}
}

case ${1} in
  start|stop|quit) "${1}" ;;
  *) echo -e "\nUsage ${0} (start|stop)\n\n" ;;
esac