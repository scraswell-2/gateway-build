#!/bin/bash
#######################################################
## NETWORK ENVIRONMENT VARIABLES
#######################################################
WAN_IF=wan0
LAN_IF=lan0

FW=$(which iptables)

start() {
  ####
  ## firewall startup
  ####
  echo "[FW] Resetting IPTables..."
  ${FW} --table filter -F
  ${FW} --table filter -X
  ${FW} --table filter -Z
  ${FW} --table nat -F
  ${FW} --table nat -X
  ${FW} --table nat -Z
  ${FW} --table mangle -F
  ${FW} --table mangle -X
  ${FW} --table mangle -Z

  # set packet filtering policies
  echo "[FW] Setting the default packet filtering policies..."
  ${FW} --table filter --policy INPUT DROP
  ${FW} --table filter --policy FORWARD DROP
  ${FW} --table filter --policy OUTPUT DROP

  # allow already established connections
  echo "[FW] Allowing all established connections to pass through..."
  ${FW} --table filter --append INPUT --match conntrack --ctstate RELATED,ESTABLISHED --jump ACCEPT
  ${FW} --table filter --append OUTPUT --match conntrack --ctstate RELATED,ESTABLISHED --jump ACCEPT
  ${FW} --table filter --append FORWARD --match conntrack --ctstate RELATED,ESTABLISHED --jump ACCEPT

  # allow this host to send
  echo "[FW] Allowing this host to make outbound connections..."
  ${FW} --table filter --append OUTPUT --jump ACCEPT

  # allow some input
  echo "[FW] Allowing incoming connections..."
  ${FW} --table filter --append INPUT --in-interface ${LAN_IF} --protocol tcp --dport 59022 --jump ACCEPT
  ${FW} --table filter --append INPUT --in-interface ${LAN_IF} --protocol tcp --dport 53 --jump ACCEPT
  ${FW} --table filter --append INPUT --in-interface ${LAN_IF} --protocol tcp --dport 80 --jump ACCEPT

  ${FW} --table filter --append INPUT --in-interface ${LAN_IF} --protocol udp --dport 53 --jump ACCEPT
  ${FW} --table filter --append INPUT --in-interface ${LAN_IF} --protocol udp --dport 67 --jump ACCEPT
  ${FW} --table filter --append INPUT --in-interface ${LAN_IF} --protocol udp --dport 69 --jump ACCEPT
  
  ${FW} --table filter --append INPUT --in-interface lo --protocol udp --dport 53 --jump ACCEPT
  ${FW} --table filter --append INPUT --in-interface lo --protocol tcp --dport 953 --jump ACCEPT
  ${FW} --table filter --append INPUT --in-interface lo --protocol tcp --dport 53 --jump ACCEPT


  # allow forwarding bridge to WAN
  echo "[FW] Allowing packet forwarding between the BRIDGE and the WAN..."
  ${FW} --table filter --append FORWARD --in-interface ${LAN_IF} --out-interface ${WAN_IF} --jump ACCEPT
  ${FW} --table filter --append FORWARD --in-interface ${LAN_IF} --out-interface ${LAN_IF} --jump ACCEPT

  # MASQ routed packets
  echo "[FW] Enabling NAT for outbound packets leaving the WAN inteface..."
  ${FW} --table nat --append POSTROUTING --out-interface ${WAN_IF} --jump MASQUERADE

  # DO NOT forward any ports.
  echo "[FW] Disabling port forwarding..."
  ${FW} --table nat --append PREROUTING --in-interface ${WAN_IF} --jump RETURN

  # enable IP forwarding for IPV4
  echo "[FW] Enabling IP forwarding..."
  echo "1" > /proc/sys/net/ipv4/ip_forward
}

stop() {
  ####
  ## Firewall Teardown
  ####
  # disable IP forwarding for IPV4
  echo "[FW] Disabling IP forwarding..."
  echo "0" > /proc/sys/net/ipv4/ip_forward

  # enabling forward any ports.
  echo "[FW] Disabling port forwarding..."
  ${FW} --table nat --delete PREROUTING --in-interface ${WAN_IF} --jump RETURN

  # disabling MASQ for routed packets
  echo "[FW] Disabling NAT for outbound packets leaving the WAN inteface..."
  ${FW} --table nat --delete POSTROUTING --out-interface ${WAN_IF} --jump MASQUERADE

  # deny forwarding bridge to WAN
  echo "[FW] Denying packet forwarding between the BRIDGE and the WAN..."
  ${FW} --table filter --delete FORWARD --in-interface ${LAN_IF} --out-interface ${LAN_IF} --jump ACCEPT
  ${FW} --table filter --delete FORWARD --in-interface ${LAN_IF} --out-interface ${WAN_IF} --jump ACCEPT

  # deny some input
  echo "[FW] Denying incoming connections..."
  ${FW} --table filter --delete INPUT --in-interface lo --protocol tcp --dport 53 --jump ACCEPT
  ${FW} --table filter --delete INPUT --in-interface lo --protocol tcp --dport 953 --jump ACCEPT
  ${FW} --table filter --delete INPUT --in-interface lo --protocol udp --dport 53 --jump ACCEPT

  ${FW} --table filter --append INPUT --in-interface ${LAN_IF} --protocol udp --dport 69 --jump ACCEPT
  ${FW} --table filter --delete INPUT --in-interface ${LAN_IF} --protocol udp --dport 67 --jump ACCEPT
  ${FW} --table filter --delete INPUT --in-interface ${LAN_IF} --protocol udp --dport 53 --jump ACCEPT

  ${FW} --table filter --delete INPUT --in-interface ${LAN_IF} --protocol tcp --dport 80 --jump ACCEPT
  ${FW} --table filter --delete INPUT --in-interface ${LAN_IF} --protocol tcp --dport 53 --jump ACCEPT
  ${FW} --table filter --delete INPUT --in-interface ${LAN_IF} --protocol tcp --dport 59022 --jump ACCEPT

  # denying this host on send
  echo "[FW] Denying this host the ability to make outbound connections..."
  ${FW} --table filter --delete OUTPUT --jump ACCEPT

  # denying already established connections
  echo "[FW] Denying all established connections pass through..."
  ${FW} --table filter --delete INPUT --match conntrack --ctstate RELATED,ESTABLISHED --jump ACCEPT
  ${FW} --table filter --delete OUTPUT --match conntrack --ctstate RELATED,ESTABLISHED --jump ACCEPT
  ${FW} --table filter --delete FORWARD --match conntrack --ctstate RELATED,ESTABLISHED --jump ACCEPT

  ## set packet filtering policies
  echo "[FW] Reverting the default packet filtering policies..."
  ${FW} --table filter --policy INPUT ACCEPT
  ${FW} --table filter --policy FORWARD ACCEPT
  ${FW} --table filter --policy OUTPUT ACCEPT
}

case ${1} in
  start|stop) "${1}" ;;
  *) echo -e "\nUsage ${0} (start|stop)\n\n" ;;
esac